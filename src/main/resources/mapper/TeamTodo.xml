<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.teamplus.mvc.dao.TeamTodoMapper">
    <!-- 프로젝트 투두리스트 [시퀀스 추출] -->
    <select id="getSequence" resultType="int">
        select
            teamTodoNo_seq.nextval
        from
            dual
    </select>

    <!-- 프로젝트 투두리스트 [등록] -->
    <insert id="newTeamTodo">
        insert
        into
            TeamTodo(TodoNo,ProjectNo,UserNo,Title,Description,TodoDate,DueDate)
        values
            (#{todoNo},#{projectNo},#{userNo},#{title},#{description},#{todoDate},#{dueDate})

    </insert>

    <!-- 프로젝트 투두리스트 [내용 수정] -->
    <update id="update">
        update TeamTodo
        set
            Title=#{title},
            Description=#{description},
            TodoDate=#{todoDate},
            DueDate=#{dueDate}
        where
            TodoNo=#{todoNo}
    </update>

    <!-- 프로젝트 투두리스트 [진행상태 설정]
    ( 파라미터 타입 : Map<String,object> )
    예시)
    Map<String,Objec> map = new HashMap<>();
    map.put("status",1);
    map.put("todoNo","project1_user1_1");
    setStatus(map);
    -->
    <update id="setStatus">
        update TeamTodo
        set
            Status=#{status}
        where
            TodoNo=#{todoNo}
    </update>

    <!-- 프로젝트 투두리스트 [진행여부 : 완료 설정] -->
    <!-- 시작전 : 0(시작전) / 완료 : 1 / 진행중 : 2 / new : 3로 기준 -->
    <update id="setComplete">
        update TeamTodo
        set
            EndDate=sysdate,
            Status=1
        where
            TodoNo=#{todoNo}
    </update>

    <!-- T프로젝트 투두리스트 [삭제] -->
    <delete id="delete">
        delete
        from TeamTodo
        where TodoNo=#{todoNo}
    </delete>

    <!-- 프로젝트 투두리스트 [전체 조회] -->
    <select id="selectList" resultType="TeamTodoDTO" parameterType="String">
        select *
        from TeamTodo
        where projectNo=#{projectNo}
        ORDER BY todoDate DESC
    </select>

    <!-- 프로젝트 투두리스트 [ProjectNo 와 UserNo별 조회]-->
    <select id="selectByUserNo" resultType="TeamTodoDTO">
        select *
        from TeamTodo
        where
            ProjectNo=#{projectNo} AND UserNo=#{userNo}
    </select>

    <!--프로젝트 투두리스트 [진행상태별 출력]-->

    <select id="selectByStatus" parameterType="TeamTodoDTO" resultType="TeamTodoDTO">
        select *
        from TeamTodo
        where
            projectNo=#{projectNo} AND Status=#{status}
        ORDER BY todoDate DESC
    </select>

    <!-- 프로젝트 To-Do List [제목별 출력] -->
    <select id="selectListByTitle" parameterType="TeamTodoDTO" resultType="TeamTodoDTO">
        SELECT *
        FROM TeamTodo
        WHERE projectNo=#{projectNo} AND title LIKE '%' || #{title} || '%'
        ORDER BY todoDate DESC
    </select>

    <!-- 프로젝트 To-Do List [설명별 출력] -->
    <select id="selectListByDescription" parameterType="TeamTodoDTO" resultType="TeamTodoDTO">
        SELECT *
        FROM TeamTodo
        WHERE projectNo=#{projectNo} AND description LIKE '%' || #{description} || '%'
        ORDER BY todoDate DESC
    </select>

    <!-- 프로젝트 To-Do List [작성자별 출력] -->
    <select id="selectListByUserNo" parameterType="TeamTodoDTO" resultType="TeamTodoDTO">
        SELECT *
        FROM TeamTodo
        WHERE projectNo=#{projectNo} AND userNo LIKE '%' || #{userNo} || '%'
        ORDER BY todoDate DESC
    </select>

    <!-- To-Do status 상태 [todoNO]로 변경 -->
    <update id="updateStatus" parameterType="TeamTodoDTO">
        UPDATE TeamTodo
        SET status=#{status}
        WHERE todoNo=#{todoNo}
    </update>

    <!-- To-Do 리스트 [마감 임박(3일)] 출력 -->
    <select id="selectListImminent" resultType="TeamTodoDTO">
        SELECT *
        FROM TEAMTODO
        WHERE dueDate BETWEEN SYSDATE AND SYSDATE+4
        ORDER BY todoDate DESC
    </select>

    <!-- 페이지네이션 -->
    <select id="getPageList" resultType="TeamTodoDTO">
        SELECT *
        FROM
            (SELECT rownum r , f.*
             FROM
                 (SELECT *
                  FROM TeamTodo
                  WHERE projectNo=#{projectNo} <include refid="search"/>
                  ORDER BY todoDate DESC) f)
        WHERE r BETWEEN #{start} AND #{end}
    </select>

    <!-- 페이지네이션 [Status 검색] -->
    <select id="getPageListByStatus" resultType="TeamTodoDTO">
        SELECT *
        FROM
            (SELECT rownum r , f.*
             FROM
                 (SELECT *
                  FROM TeamTodo
                  WHERE projectNo=#{projectNo} AND status=#{status}
                  ORDER BY todoDate DESC) f)
        WHERE r BETWEEN #{start} AND #{end}
    </select>

    <!-- [페이지네이션] 페이지 수를 계산하기 위한 쿼리 -->
    <select id="count" resultType="int">
        SELECT COUNT(*)
        FROM TeamTodo
        WHERE projectNo=#{projectNo} <include refid="search"/>
    </select>

    <!-- [페이지네이션] 페이지 수를 계산하기 위한 쿼리 [Status 검색용] -->
    <select id="countByStatus" resultType="int">
        SELECT COUNT(*)
        FROM TeamTodo
        WHERE projectNo=#{projectNo} AND status=#{status}
    </select>

    <!-- 일반 검색 -->
    <sql id="search">
            <if test="type != null and type.length > 0">
                <trim prefix="and">
                        <if	test="type=='title'.toString()"> title like '%' || #{keyword} || '%' </if>
                        <if	test="type=='description'.toString()"> description like '%' || #{keyword} || '%' </if>
                        <if	test="type=='incharge'.toString()"> userNo like '%' || #{userNo} || '%' </if>
                        <if	test="type=='imminent'.toString()"> dueDate BETWEEN SYSDATE AND SYSDATE+4 </if>
                </trim>
            </if>
    </sql>

    <!-- 프로젝트 투두리스트 [dueDate가 오늘 이후날짜 조회] -->
    <select id="selectListAfterToday" resultType="TeamTodoDTO" parameterType="String">
        select * from TeamTodo WHERE projectNo=#{projectNo} AND dueDate>=TRUNC(SYSDATE)
    </select>

</mapper>