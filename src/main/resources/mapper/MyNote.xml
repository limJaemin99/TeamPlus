<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.teamplus.mvc.dao.MyNoteMapper">

    <!-- 노트 번호 시퀀스 -->
    <select id="getMynoteSequence" resultType="int">
        SELECT CASE WHEN MAX(noteNo) is null THEN 1
                    ELSE MAX(noteNo)
                   END AS noteNo
        FROM MYNOTE
    </select>

    <!-- 노트 글 작성 -->
    <insert id="write" parameterType="MyNoteDTO">
        INSERT INTO
            myNote
        VALUES (#{userNo},#{noteNo},#{noteDate},#{title},#{content},#{password},'비공개')
    </insert>

    <!-- 사용자 + 날짜 지정 노트 글 리스트 [출력] -->
    <select id="selectList" parameterType="String" resultType="MyNoteDTO">
        SELECT *
        FROM myNote
        WHERE userNo=#{userNo}
        order by noteNo
    </select>

    <!--<select id="selectList" parameterType="java.util.Map" resultType="MyNoteDTO">
        SELECT * FROM
        (SELECT rownum r ,f.* FROM
        (SELECT * FROM myNote
        <include refid="search"></include>
        and userNo = #{userNo}
        ORDER BY noteNo DESC) f)
        WHERE r BETWEEN #{pageRequest.start} AND #{pageRequest.end}
    </select>-->

    <!-- 노트 내용 확인 -->
    <select id="selectOne" parameterType="int" resultType="MyNoteDTO">
        SELECT *
        FROM myNote
        WHERE noteNo=#{noteNo}
    </select>

    <!-- 노트 패스워드 로그인용 -->
    <select id="NoteIsExist" parameterType="MyNoteDTO" resultType="int">
        SELECT COUNT(*)
        FROM myNote
        WHERE noteNo=#{noteNO} AND password=#{password}
    </select>

    <!-- 사용자 + 날짜 지정 노트 글 [삭제] -->
    <delete id="delete" parameterType="int">
        DELETE FROM
            myNote
        WHERE
            noteNo=#{noteNo}
    </delete>

    <!-- 사용자 + 날짜 지정 노트 글 [수정] -->
    <update id="update" parameterType="MyNoteDTO">
        UPDATE myNote
        SET title=#{title},content=#{content},password=#{password}
        WHERE noteNo=#{noteNo}
    </update>
    <sql id="search">
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR ">
                    <if test="type=='t'.toString()"> title like '%' || #{keyword} || '%' </if>
                </foreach>
            </if>
            <if test="from != null and to != null">
                <trim prefix="and">
                    createdAt BETWEEN #{from} AND #{to}
                </trim>
            </if>
        </where>
    </sql>

</mapper>